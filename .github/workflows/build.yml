name: Build and Release

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  release:
    types: [ created ]

permissions:
  contents: write

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Bun
      uses: oven-sh/setup-bun@v1
      with:
        bun-version: latest
        
    - name: Install dependencies
      run: bun install
      
    - name: Lint code
      run: bun run lint
      
    - name: Compile TypeScript
      run: bun run tsc

  build:
    needs: test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            platform: linux
            arch: x64
            extension: ""
          - os: windows-latest
            platform: windows
            arch: x64
            extension: ".exe"
          - os: macos-latest
            platform: macos
            arch: x64
            extension: ""
          - os: macos-14  # M1/M2 runners
            platform: macos
            arch: arm64
            extension: ""
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Bun
      uses: oven-sh/setup-bun@v1
      with:
        bun-version: latest
        
    - name: Install dependencies
      run: bun install
      
    - name: Build executable
      run: bun build index.ts --compile --target=bun --outfile audio-organizer-${{ matrix.platform }}-${{ matrix.arch }}${{ matrix.extension }}
      
    - name: Make executable (Unix)
      if: matrix.os != 'windows-latest'
      run: chmod +x audio-organizer-${{ matrix.platform }}-${{ matrix.arch }}${{ matrix.extension }}
      
    - name: Test executable (Unix)
      if: matrix.os != 'windows-latest'
      run: ./audio-organizer-${{ matrix.platform }}-${{ matrix.arch }}${{ matrix.extension }} --help || true
      
    - name: Test executable (Windows)
      if: matrix.os == 'windows-latest'
      run: .\audio-organizer-${{ matrix.platform }}-${{ matrix.arch }}${{ matrix.extension }} --help || echo "Help command not available"
      shell: pwsh
      
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: audio-organizer-${{ matrix.platform }}-${{ matrix.arch }}
        path: audio-organizer-${{ matrix.platform }}-${{ matrix.arch }}${{ matrix.extension }}
        retention-days: 30

  release:
    needs: build
    if: github.event_name == 'release'
    runs-on: ubuntu-latest
    
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      
    - name: Display structure of downloaded files
      run: ls -la **/
      
    - name: Release binaries
      uses: softprops/action-gh-release@v1
      with:
        files: |
          audio-organizer-linux-x64/audio-organizer-linux-x64
          audio-organizer-windows-x64/audio-organizer-windows-x64.exe
          audio-organizer-macos-x64/audio-organizer-macos-x64
          audio-organizer-macos-arm64/audio-organizer-macos-arm64
        token: ${{ secrets.GITHUB_TOKEN }}
